#!/bin/bash

usage() {
    printf "Usage: %s: [-s seconds] COMMAND\n" $0
    echo "COMMAND   DESCRIPTION"
    echo "start     Start the service." 
    echo "stop      Stop the service." 
    echo "restart   Restart the oncall service. Use [-s seconds] flag for a delayed restart." 
    exit 2
}

sflag=
while getopts s: name; do
    case $name in
        a)  sflag=1
            sval="$OPTARG";;
        ?)  usage;;
    esac
done
shift $(($OPTIND - 1))

if [[ ! -z "${ONCALL_SOUND_FILE}" ]]; then
    sound_file="${ONCALL_SOUND_FILE}"
else  
    echo 'ONCALL_SOUND_FILE environment variable not set.'
    exit 1
fi

start() {
    startcheck() {
        systemctl --user start oncall-monitor.service 
        echo "Checking the service status for reassurance ..."
        systemctl --user status oncall-monitor.service > /dev/null
        if [[ $? ]]; then
            sleep 5 
            echo "Confirmed service started successfully"
        else
            echo "Service failed to start. Sounding the alarm."
            trap "echo Exited!; exit;" SIGINT SIGTERM
            while [[ true ]]; do
                aplay -r 480000 "$sound_file" 2> /dev/null
            done
        fi
    }
    if [ ! -z "$sflag" ]; then
        if [ ! -z "$sval" ]; then
            sleep "$sval"
            startcheck
        else
            echo "No value for seconds. Please specify a value for -s"
        fi
    else
        startcheck
    fi
}

stop() {
    question="Yes, I really, really want to stop the monitor and do not need it any longer."
    printf "Stop service? Type the following to confirm service stop: \n%s\n"  "$question"
    read input
    if [ "$input" == "$question" ]; then
        systemctl --user stop oncall-monitor.service && echo "Successfully stopped the service"
    else
        echo "Failed to get confirmation to stop service."
        exit 1
    fi
}

restart() {
    systemctl --user stop oncall-monitor.service
    start
}

case "$1" in
    start)      start;;
    stop)       stop;;
    restart)    restart;;
    *)          usage;;
esac
